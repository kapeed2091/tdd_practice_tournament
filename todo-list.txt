Usecases: Total time: 13 hrs + 1 hr
   - User can create a knock-out tournament with configurable number of rounds and start datetime - 2: 30 hrs
   - User can get list of all tournaments (id, name, number of rounds, start_datetime, tournament_status) - 1 hr + 1 hr
   - User can subscribe to a tournament which is not yet started - 1: 30 hrs
   - User can play matches once the tournament is started - 3: 00 hrs
       - User will submit his score in the match
   - User will progress to next round if he wins the match
   - User can get his current round number for a tournament - 1 hr
   - User can get his opponent user profile in any round in a tournament - 1 hr
   - User can get the winner user profile of any tournament - 1 hr 30 mins
   
Raise Appropriate custom exceptions wherever necessary

Assumptions:
   - Tournament will always be full before start time
   - All players will play all their matches
   - In case of tie, Whoever submits the score first is winner
   - User profile has Name, Age, Gender
   - tournament_status - CAN_JOIN, FULL_YET_TO_START, IN_PROGRESS, COMPLETED.

TODOs:
    - create user
        - create user with username -- DONE
        - no two users can have same username -- DONE
    - user can create tournament with configurable number of rounds and start datetime
        - create tournament -- DONE
        - create tournament with invalid datetime(yesterday's date) -- DONE
        - create tournament with rounds non positive -- DONE
        - create tournament by user
        - refactor testcases --> don't use internal functions
    - user can get all tournaments
        - get tournaments having tournaments in all states -- DONE
        - get tournaments with ordering according to status order:[
        FULL_YET_TO_START, CAN_JOIN, IN_PROGRESS, COMPLETED] and start_datetime -- DONE
        - get tournaments with offset and limit -- NOT LISTED IN USECASE
        - refactor testcases --> don't use internal functions
    - user can subscribe to tournament
        - user subscribing to tournament -- DONE
        - user can only subscribe to CAN_JOIN tournaments -- DONE
        - requested user should be valid user -- DONE
        - subscribed player can't subscribe again
        - subscribing to invalid tournament_id
        - tournament_status should change to FULL_YET_TO_START if max users subscribed
        - refactor testcases --> don't use internal functions

    - play match
    - end match
    - get current round
    - get opponent profile in round of a tournament
    - get winner profile of tournament
